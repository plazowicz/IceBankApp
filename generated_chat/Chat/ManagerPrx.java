// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ManagerPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Chat;

public interface ManagerPrx extends Ice.ObjectPrx
{
    public String[] getRooms();

    public String[] getRooms(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRooms();

    public Ice.AsyncResult begin_getRooms(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRooms(Ice.Callback __cb);

    public Ice.AsyncResult begin_getRooms(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getRooms(Callback_Manager_getRooms __cb);

    public Ice.AsyncResult begin_getRooms(java.util.Map<String, String> __ctx, Callback_Manager_getRooms __cb);

    public String[] end_getRooms(Ice.AsyncResult __result);

    public boolean register(String nick, String password)
        throws UserAlreadyExistException;

    public boolean register(String nick, String password, java.util.Map<String, String> __ctx)
        throws UserAlreadyExistException;

    public Ice.AsyncResult begin_register(String nick, String password);

    public Ice.AsyncResult begin_register(String nick, String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_register(String nick, String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_register(String nick, String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_register(String nick, String password, Callback_Manager_register __cb);

    public Ice.AsyncResult begin_register(String nick, String password, java.util.Map<String, String> __ctx, Callback_Manager_register __cb);

    public boolean end_register(Ice.AsyncResult __result)
        throws UserAlreadyExistException;

    public boolean login(String nick, String password)
        throws IncorrectPasswordException,
               UserAlreadyLoggedInException,
               UserNotExistException;

    public boolean login(String nick, String password, java.util.Map<String, String> __ctx)
        throws IncorrectPasswordException,
               UserAlreadyLoggedInException,
               UserNotExistException;

    public Ice.AsyncResult begin_login(String nick, String password);

    public Ice.AsyncResult begin_login(String nick, String password, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_login(String nick, String password, Ice.Callback __cb);

    public Ice.AsyncResult begin_login(String nick, String password, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_login(String nick, String password, Callback_Manager_login __cb);

    public Ice.AsyncResult begin_login(String nick, String password, java.util.Map<String, String> __ctx, Callback_Manager_login __cb);

    public boolean end_login(Ice.AsyncResult __result)
        throws IncorrectPasswordException,
               UserAlreadyLoggedInException,
               UserNotExistException;

    public boolean logout(String nick)
        throws UserNotLoggedInException;

    public boolean logout(String nick, java.util.Map<String, String> __ctx)
        throws UserNotLoggedInException;

    public Ice.AsyncResult begin_logout(String nick);

    public Ice.AsyncResult begin_logout(String nick, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_logout(String nick, Ice.Callback __cb);

    public Ice.AsyncResult begin_logout(String nick, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_logout(String nick, Callback_Manager_logout __cb);

    public Ice.AsyncResult begin_logout(String nick, java.util.Map<String, String> __ctx, Callback_Manager_logout __cb);

    public boolean end_logout(Ice.AsyncResult __result)
        throws UserNotLoggedInException;

    public boolean createRoom(String roomName)
        throws RoomAlreadyExistException;

    public boolean createRoom(String roomName, java.util.Map<String, String> __ctx)
        throws RoomAlreadyExistException;

    public Ice.AsyncResult begin_createRoom(String roomName);

    public Ice.AsyncResult begin_createRoom(String roomName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_createRoom(String roomName, Ice.Callback __cb);

    public Ice.AsyncResult begin_createRoom(String roomName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_createRoom(String roomName, Callback_Manager_createRoom __cb);

    public Ice.AsyncResult begin_createRoom(String roomName, java.util.Map<String, String> __ctx, Callback_Manager_createRoom __cb);

    public boolean end_createRoom(Ice.AsyncResult __result)
        throws RoomAlreadyExistException;

    public boolean removeRoom(String roomName)
        throws RoomNotFoundException;

    public boolean removeRoom(String roomName, java.util.Map<String, String> __ctx)
        throws RoomNotFoundException;

    public Ice.AsyncResult begin_removeRoom(String roomName);

    public Ice.AsyncResult begin_removeRoom(String roomName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeRoom(String roomName, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeRoom(String roomName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeRoom(String roomName, Callback_Manager_removeRoom __cb);

    public Ice.AsyncResult begin_removeRoom(String roomName, java.util.Map<String, String> __ctx, Callback_Manager_removeRoom __cb);

    public boolean end_removeRoom(Ice.AsyncResult __result)
        throws RoomNotFoundException;
}
