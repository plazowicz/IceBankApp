// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `RoomPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Chat;

public interface RoomPrx extends Ice.ObjectPrx
{
    public Message[] getHistory()
        throws UserIsNotInRoomException;

    public Message[] getHistory(java.util.Map<String, String> __ctx)
        throws UserIsNotInRoomException;

    public Ice.AsyncResult begin_getHistory();

    public Ice.AsyncResult begin_getHistory(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getHistory(Ice.Callback __cb);

    public Ice.AsyncResult begin_getHistory(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getHistory(Callback_Room_getHistory __cb);

    public Ice.AsyncResult begin_getHistory(java.util.Map<String, String> __ctx, Callback_Room_getHistory __cb);

    public Message[] end_getHistory(Ice.AsyncResult __result)
        throws UserIsNotInRoomException;

    public boolean send(String message)
        throws UserIsNotInRoomException;

    public boolean send(String message, java.util.Map<String, String> __ctx)
        throws UserIsNotInRoomException;

    public Ice.AsyncResult begin_send(String message);

    public Ice.AsyncResult begin_send(String message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_send(String message, Ice.Callback __cb);

    public Ice.AsyncResult begin_send(String message, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_send(String message, Callback_Room_send __cb);

    public Ice.AsyncResult begin_send(String message, java.util.Map<String, String> __ctx, Callback_Room_send __cb);

    public boolean end_send(Ice.AsyncResult __result)
        throws UserIsNotInRoomException;

    public boolean join(String roomName, ClientCallbackPrx callback)
        throws RoomNotFoundException,
               UserAlreadyInRoomException;

    public boolean join(String roomName, ClientCallbackPrx callback, java.util.Map<String, String> __ctx)
        throws RoomNotFoundException,
               UserAlreadyInRoomException;

    public Ice.AsyncResult begin_join(String roomName, ClientCallbackPrx callback);

    public Ice.AsyncResult begin_join(String roomName, ClientCallbackPrx callback, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_join(String roomName, ClientCallbackPrx callback, Ice.Callback __cb);

    public Ice.AsyncResult begin_join(String roomName, ClientCallbackPrx callback, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_join(String roomName, ClientCallbackPrx callback, Callback_Room_join __cb);

    public Ice.AsyncResult begin_join(String roomName, ClientCallbackPrx callback, java.util.Map<String, String> __ctx, Callback_Room_join __cb);

    public boolean end_join(Ice.AsyncResult __result)
        throws RoomNotFoundException,
               UserAlreadyInRoomException;

    public boolean leave(String roomName)
        throws RoomNotFoundException,
               UserIsNotInRoomException;

    public boolean leave(String roomName, java.util.Map<String, String> __ctx)
        throws RoomNotFoundException,
               UserIsNotInRoomException;

    public Ice.AsyncResult begin_leave(String roomName);

    public Ice.AsyncResult begin_leave(String roomName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_leave(String roomName, Ice.Callback __cb);

    public Ice.AsyncResult begin_leave(String roomName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_leave(String roomName, Callback_Room_leave __cb);

    public Ice.AsyncResult begin_leave(String roomName, java.util.Map<String, String> __ctx, Callback_Room_leave __cb);

    public boolean end_leave(Ice.AsyncResult __result)
        throws RoomNotFoundException,
               UserIsNotInRoomException;
}
